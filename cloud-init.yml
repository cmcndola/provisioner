#cloud-config
hostname: ${server_name}

# Create users
users:
  - name: ${username}
    groups: sudo,docker
    shell: /bin/zsh
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    ssh_authorized_keys:
      - ${ssh_public_key}

# Update package lists
package_update: true
package_upgrade: true

# Install essential packages
packages:
  - apt-transport-https
  - build-essential
  - ca-certificates
  - curl
  - fonts-powerline
  - gnupg
  - htop
  - jq
  - just
  - lsb-release
  - ncdu
  - net-tools
  - plocate
  - python3-full
  - python3-pip
  - rclone
  - software-properties-common
  - ufw
  - unattended-upgrades
  - vim-nox
  - zsh

# Configure firewall (as backup to Hetzner firewall)
runcmd:
  # UFW setup
  - ufw allow 22/tcp comment 'SSH access'
  - ufw allow 80/tcp comment 'HTTP access'
  - ufw allow 443/tcp comment 'HTTPS access'
  - ufw --force enable

  # Install fail2ban for SSH protection (since we can't rely on IP restrictions)
  - apt-get install -y fail2ban
  - systemctl enable fail2ban
  - systemctl start fail2ban

  # Verify Docker is running properly
  - systemctl status docker
  - docker --version
  - docker compose version

  # Install ctop (https://github.com/bcicen/ctop)
  - wget https://github.com/bcicen/ctop/releases/download/v0.7.7/ctop-0.7.7-linux-arm64 -O /usr/local/bin/ctop
  - chmod +x /usr/local/bin/ctop

  # SSH hardening
  - cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak
  - sed -i 's/^#\?PermitRootLogin .*/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -i 's/^#\?PasswordAuthentication .*/PasswordAuthentication no/' /etc/ssh/sshd_config
  - sed -i 's/^#\?ChallengeResponseAuthentication .*/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config
  - sed -i 's/^#\?PubkeyAuthentication .*/PubkeyAuthentication yes/' /etc/ssh/sshd_config
  - echo "AllowUsers ${username}" >> /etc/ssh/sshd_config
  - systemctl restart ssh

  # Set timezone
  - timedatectl set-timezone Africa/Lusaka

  # Create and configure swap file (if none exists)
  - |
    if [ $(swapon --show | wc -l) -eq 0 ]; then
      # Calculate swap size (2x RAM, max 4GB)
      mem_kb=$(grep MemTotal /proc/meminfo | awk '{print $2}')
      mem_gb=$((mem_kb / 1024 / 1024))
      swap_size=$((mem_gb * 2))
      if [ $swap_size -gt 4 ]; then swap_size=4; fi

      # Create and configure swap
      fallocate -l "$${swap_size}G" /swapfile
      chmod 600 /swapfile
      mkswap /swapfile
      swapon /swapfile

      # Add to fstab
      cp /etc/fstab /etc/fstab.bak
      echo '/swapfile none swap sw 0 0' | tee -a /etc/fstab

      # Configure swap settings
      sysctl vm.swappiness=10
      sysctl vm.vfs_cache_pressure=50
      echo "vm.swappiness=10" | tee -a /etc/sysctl.conf
      echo "vm.vfs_cache_pressure=50" | tee -a /etc/sysctl.conf
    fi

  # Secure shared memory
  - cp /etc/fstab /etc/fstab.bak2
  - echo "none /run/shm tmpfs defaults,ro 0 0" | tee -a /etc/fstab
  - mount -o remount /run/shm

  # Install oh-my-zsh and configure it
  - runuser -l ${username} -c 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended'

  # Install Spaceship theme for oh-my-zsh
  - |
    # Clone the Spaceship prompt repository
    git clone https://github.com/spaceship-prompt/spaceship-prompt.git "/home/${username}/.oh-my-zsh/custom/themes/spaceship-prompt" --depth=1

    # Create a symlink to the theme file
    ln -s "/home/${username}/.oh-my-zsh/custom/themes/spaceship-prompt/spaceship.zsh-theme" "/home/${username}/.oh-my-zsh/custom/themes/spaceship.zsh-theme"

    # Set ownership
    chown -R ${username}:${username} "/home/${username}/.oh-my-zsh/custom/themes/spaceship-prompt"
    chown ${username}:${username} "/home/${username}/.oh-my-zsh/custom/themes/spaceship.zsh-theme"

  # Install additional Powerline fonts
  - |
    cd /tmp
    wget https://github.com/Lokaltog/powerline/raw/develop/font/PowerlineSymbols.otf
    wget https://github.com/Lokaltog/powerline/raw/develop/font/10-powerline-symbols.conf
    wget https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf
    wget https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf
    wget https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf
    wget https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf

    # Move fonts to the system font directory
    mv -v PowerlineSymbols.otf /usr/share/fonts/
    mv -v MesloLGS*.ttf /usr/share/fonts/

    # Update font cache
    fc-cache -vf

    # Move config to proper location
    mv 10-powerline-symbols.conf /etc/fonts/conf.d/

  # Install ZSH plugins
  - |
    # Install zsh-autosuggestions
    git clone https://github.com/zsh-users/zsh-autosuggestions /home/${username}/.oh-my-zsh/custom/plugins/zsh-autosuggestions

    # Install zsh-syntax-highlighting
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git /home/${username}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting

    # Set permissions for the plugins
    chown -R ${username}:${username} /home/${username}/.oh-my-zsh/custom/plugins/

  # Configure .zshrc
  - |
    # Set theme and plugins in .zshrc
    sed -i 's/ZSH_THEME="robbyrussell"/ZSH_THEME="spaceship"/' /home/${username}/.zshrc
    sed -i 's/plugins=(git)/plugins=(git docker docker-compose colorize colored-man-pages sudo zsh-autosuggestions zsh-syntax-highlighting)/' /home/${username}/.zshrc

    # Add some useful aliases and configurations
    cat >> /home/${username}/.zshrc << 'EOL'

    # Custom configurations
    export TERM="xterm-256color"

    # Set default editor
    export EDITOR='vim'

    # Useful aliases
    alias la='ls -lah'

    # Disable sharing history between terminals
    unsetopt share_history
    EOL

    # Fix permissions
    chown ${username}:${username} /home/${username}/.zshrc

  # Install vim-airline
  - |
    # Create vim plugin directories
    mkdir -p /home/${username}/.vim/autoload /home/${username}/.vim/bundle

    # Install vim-plug (plugin manager)
    curl -fLo /home/${username}/.vim/autoload/plug.vim --create-dirs \
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

    # Create .vimrc with vim-airline configuration
    cat > /home/${username}/.vimrc << 'EOL'
    call plug#begin('~/.vim/bundle')

    " Install vim-airline and themes
    Plug 'vim-airline/vim-airline'
    Plug 'vim-airline/vim-airline-themes'

    " Initialize plugin system
    call plug#end()

    " Airline configuration
    let g:airline_powerline_fonts = 1
    let g:airline_theme = 'minimalist'
    let g:airline#extensions#tabline#enabled = 1

    " General vim settings
    syntax enable
    set number
    set background=dark
    set encoding=utf-8

    " Key mappings
    nnoremap <C-J> <C-W><C-J>
    nnoremap <C-K> <C-W><C-K>
    nnoremap <C-L> <C-W><C-L>
    nnoremap <C-H> <C-W><C-H>
    EOL

    # Set permissions
    chown -R ${username}:${username} /home/${username}/.vim
    chown ${username}:${username} /home/${username}/.vimrc

    # Install plugins automatically
    su - ${username} -c 'vim -E -s -u "/home/${username}/.vimrc" +PlugInstall +qall'

write_files:
  # Configure unattended upgrades
  - path: /etc/apt/apt.conf.d/20auto-upgrades
    content: |
      APT::Periodic::Update-Package-Lists "1";
      APT::Periodic::Unattended-Upgrade "1";
      APT::Periodic::AutocleanInterval "7";

# Final message on console
final_message: "The system is finally up, after $UPTIME seconds"
